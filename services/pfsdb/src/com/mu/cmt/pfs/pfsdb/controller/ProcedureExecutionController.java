/*Copyright (c) 2016-2017 cmt.mu All Rights Reserved.
 This software is the confidential and proprietary information of cmt.mu You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with cmt.mu*/
package com.mu.cmt.pfs.pfsdb.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.InputStream;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.wavemaker.runtime.file.model.Downloadable;
import com.wavemaker.runtime.util.WMMultipartUtils;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;

import com.mu.cmt.pfs.pfsdb.service.PfsdbProcedureExecutorService;
import com.mu.cmt.pfs.pfsdb.models.procedure.*;

@RestController(value = "Pfsdb.ProcedureExecutionController")
@RequestMapping("/pfsdb/procedureExecutor")
@Api(value = "ProcedureExecutionController", description = "controller class for procedure execution")
public class ProcedureExecutionController {

    private static final Logger LOGGER = LoggerFactory.getLogger(ProcedureExecutionController.class);

    @Autowired
    private PfsdbProcedureExecutorService procedureService;

    @RequestMapping(value = "/procedure/execute/ProcFd723pk0UpdateDeliveryOut", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Update tables when fabseq/dyejob is delivered")
    public ProcFd723pk0updateDeliveryOutResponse executeProcFd723pk0UpdateDeliveryOut(@RequestParam(value = "pUsrid") String pusrid, @RequestParam(value = "pPrgid") String pprgid, @RequestParam(value = "pBarcode") String pbarcode, @RequestParam(value = "pSaveOption", required = false) String psaveOption, @RequestParam(value = "pSrcLcn", required = false) String psrcLcn, @RequestParam(value = "pDestLcn", required = false) String pdestLcn, @RequestParam(value = "pManualdn", required = false) String pmanualdn, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd723pk0UpdateDeliveryOut");
        ProcFd723pk0updateDeliveryOutResponse _result = procedureService.executeProcFd723pk0UpdateDeliveryOut(pusrid, pprgid, pbarcode, psaveOption, psrcLcn, pdestLcn, pmanualdn);
        LOGGER.debug("got the result for named procedure: ProcFd723pk0UpdateDeliveryOut, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_GetNextProcess", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get the next process for a dyejob")
    public ProcFd730wpk0GetNextProcessResponse executeProcFD730WPK0_GetNextProcess(@RequestParam(value = "pPrgId", required = false) String pprgId, @RequestParam(value = "pDyejob", required = false) String pdyejob, @RequestParam(value = "pFabseq", required = false) Integer pfabseq, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_GetNextProcess");
        ProcFd730wpk0GetNextProcessResponse _result = procedureService.executeProcFD730WPK0_GetNextProcess(pprgId, pdyejob, pfabseq);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_GetNextProcess, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_GetLastLocation", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get User Last Location")
    public ProcFd730wpk0GetLastLocationResponse executeProcFD730WPK0_GetLastLocation(@RequestParam(value = "pPrgId", required = false) String pprgId, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_GetLastLocation");
        ProcFd730wpk0GetLastLocationResponse _result = procedureService.executeProcFD730WPK0_GetLastLocation(pprgId);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_GetLastLocation, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_GetRackbin", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Fetch rackbin")
    public ProcFd730wpk0GetRackbinResponse executeProcFD730WPK0_GetRackbin(@RequestParam(value = "pPrgId", required = false) String pprgId, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_GetRackbin");
        ProcFd730wpk0GetRackbinResponse _result = procedureService.executeProcFD730WPK0_GetRackbin(pprgId);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_GetRackbin, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/SprocFd107pk0_cqprocGetRejCod", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "SprocFd107pk0_cqprocGetRejCod")
    public SprocFd107pk0CqprocGetRejCodResponse executeSprocFd107pk0_cqprocGetRejCod(@RequestParam(value = "p_prgid") String pprgid, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: SprocFd107pk0_cqprocGetRejCod");
        SprocFd107pk0CqprocGetRejCodResponse _result = procedureService.executeSprocFd107pk0_cqprocGetRejCod(pprgid);
        LOGGER.debug("got the result for named procedure: SprocFd107pk0_cqprocGetRejCod, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_GetUndeliveredJobs", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get undelivered Jobs")
    public ProcFd730wpk0GetUndeliveredJobsResponse executeProcFD730WPK0_GetUndeliveredJobs(@RequestParam(value = "pPrgId", required = false) String pprgId, @RequestParam(value = "pRackbin", required = false) String prackbin, @RequestParam(value = "p_DestScn", required = false) String pdestScn, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_GetUndeliveredJobs");
        ProcFd730wpk0GetUndeliveredJobsResponse _result = procedureService.executeProcFD730WPK0_GetUndeliveredJobs(pprgId, prackbin, pdestScn);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_GetUndeliveredJobs, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_InsScanDyejobFab", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get job details from barcode")
    public ProcFd730wpk0InsScanDyejobFabResponse executeProcFD730WPK0_InsScanDyejobFab(@RequestParam(value = "pPrgId", required = false) String pprgId, @RequestParam(value = "pBarcode", required = false) String pbarcode, @RequestParam(value = "pDDelNum", required = false) String pddelNum, @RequestParam(value = "pRackbin", required = false) String prackbin, @RequestParam(value = "p_DestScn", required = false) String pdestScn, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_InsScanDyejobFab");
        ProcFd730wpk0InsScanDyejobFabResponse _result = procedureService.executeProcFD730WPK0_InsScanDyejobFab(pprgId, pbarcode, pddelNum, prackbin, pdestScn);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_InsScanDyejobFab, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd107pk0_cqprocGetLocationList", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "ProcFd107pk0_cqprocGetLocationList")
    public ProcFd107pk0CqprocGetLocationListResponse executeProcFd107pk0_cqprocGetLocationList(@RequestParam(value = "pUsrid", required = false) String pusrid, @RequestParam(value = "pPrgid", required = false) String pprgid, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd107pk0_cqprocGetLocationList");
        ProcFd107pk0CqprocGetLocationListResponse _result = procedureService.executeProcFd107pk0_cqprocGetLocationList(pusrid, pprgid);
        LOGGER.debug("got the result for named procedure: ProcFd107pk0_cqprocGetLocationList, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_GetDelDestLOV", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Fetch destination LOV")
    public ProcFd730wpk0GetDelDestLovResponse executeProcFD730WPK0_GetDelDestLOV(@RequestParam(value = "pPrgId", required = false) String pprgId, @RequestParam(value = "pRackbin", required = false) String prackbin, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_GetDelDestLOV");
        ProcFd730wpk0GetDelDestLovResponse _result = procedureService.executeProcFD730WPK0_GetDelDestLOV(pprgId, prackbin);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_GetDelDestLOV, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/Procfd723pk0GetJobissueHis", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Procfd723pk0GetJobissueHis")
    public Procfd723pk0getJobissueHisResponse executeProcfd723pk0GetJobissueHis(@RequestParam(value = "pUsrid", required = false) String pusrid, @RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pBarcode", required = false) String pbarcode, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: Procfd723pk0GetJobissueHis");
        Procfd723pk0getJobissueHisResponse _result = procedureService.executeProcfd723pk0GetJobissueHis(pusrid, pprgid, pbarcode);
        LOGGER.debug("got the result for named procedure: Procfd723pk0GetJobissueHis, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_DelDN", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Delete DN")
    public Void executeProcFD730WPK0_DelDN(@RequestParam(value = "pPrgId", required = false) String pprgId, @RequestParam(value = "pDDelNum", required = false) String pddelNum, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_DelDN");
        Void _result = procedureService.executeProcFD730WPK0_DelDN(pprgId, pddelNum);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_DelDN, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_InsNewDN", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Create new DN")
    public Void executeProcFD730WPK0_InsNewDN(@RequestParam(value = "pPrgId", required = false) String pprgId, @RequestParam(value = "pRackbin", required = false) String prackbin, @RequestParam(value = "pDesLcn", required = false) String pdesLcn, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_InsNewDN");
        Void _result = procedureService.executeProcFD730WPK0_InsNewDN(pprgId, prackbin, pdesLcn);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_InsNewDN, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD800WPK0_MCSETUPSprocUpdWOValue", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "ProcFD800WPK0_MCSETUPSprocUpdWOValue")
    public ProcFd800wpk0McsetupsprocUpdWovalueResponse executeProcFD800WPK0_MCSETUPSprocUpdWOValue(@RequestParam(value = "p_prgid", required = false) String pprgid, @RequestParam(value = "p_usrid", required = false) String pusrid, @RequestParam(value = "p_wrkid", required = false) String pwrkid, @RequestParam(value = "p_dyejoblist", required = false) String pdyejoblist, @RequestParam(value = "p_redye", required = false) Integer predye, @RequestParam(value = "p_procseq", required = false) Integer pprocseq, @RequestParam(value = "p_paramcod", required = false) String pparamcod, @RequestParam(value = "p_actval", required = false) String pactval, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD800WPK0_MCSETUPSprocUpdWOValue");
        ProcFd800wpk0McsetupsprocUpdWovalueResponse _result = procedureService.executeProcFD800WPK0_MCSETUPSprocUpdWOValue(pprgid, pusrid, pwrkid, pdyejoblist, predye, pprocseq, pparamcod, pactval);
        LOGGER.debug("got the result for named procedure: ProcFD800WPK0_MCSETUPSprocUpdWOValue, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_GetJobGroups", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get Job Groups")
    public ProcFd730wpk0GetJobGroupsResponse executeProcFD730WPK0_GetJobGroups(@RequestParam(value = "pPrgId", required = false) String pprgId, @RequestParam(value = "pDyejob", required = false) String pdyejob, @RequestParam(value = "pFabseq", required = false) Integer pfabseq, @RequestParam(value = "pJobGroup", required = false) String pjobGroup, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_GetJobGroups");
        ProcFd730wpk0GetJobGroupsResponse _result = procedureService.executeProcFD730WPK0_GetJobGroups(pprgId, pdyejob, pfabseq, pjobGroup);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_GetJobGroups, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/updateProcFd107pk0_CqprocUpdInspectionSts", method = RequestMethod.PUT)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "updateProcFd107pk0_CqprocUpdInspectionSts")
    public UpdateProcFd107pk0CqprocUpdInspectionStsResponse executeUpdateProcFd107pk0_CqprocUpdInspectionSts(@Valid @RequestBody UpdateProcFd107pk0CqprocUpdInspectionStsRequest updateProcFd107pk0cqprocUpdInspectionStsRequest, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: updateProcFd107pk0_CqprocUpdInspectionSts");
        UpdateProcFd107pk0CqprocUpdInspectionStsResponse _result = procedureService.executeUpdateProcFd107pk0_CqprocUpdInspectionSts(updateProcFd107pk0cqprocUpdInspectionStsRequest);
        LOGGER.debug("got the result for named procedure: updateProcFd107pk0_CqprocUpdInspectionSts, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd723pk0GetDeliveryInDetails", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get all the delivery details that will be acknowledge")
    public ProcFd723pk0getDeliveryInDetailsResponse executeProcFd723pk0GetDeliveryInDetails(@RequestParam(value = "pUsrid") String pusrid, @RequestParam(value = "pPrgid") String pprgid, @RequestParam(value = "pBarcode") String pbarcode, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd723pk0GetDeliveryInDetails");
        ProcFd723pk0getDeliveryInDetailsResponse _result = procedureService.executeProcFd723pk0GetDeliveryInDetails(pusrid, pprgid, pbarcode);
        LOGGER.debug("got the result for named procedure: ProcFd723pk0GetDeliveryInDetails, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD800WPK0_MCSETUPSprocGetFmchpic", method = RequestMethod.GET, produces = "application/octet-stream")
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "ProcFD800WPK0_MCSETUPSprocGetFmchpic")
    public Downloadable executeProcFD800WPK0_MCSETUPSprocGetFmchpic(@RequestParam(value = "p_prgid", required = false) String pprgid, @RequestParam(value = "p_usrid", required = false) String pusrid, @RequestParam(value = "p_fmchgrp", required = false) String pfmchgrp, @RequestParam(value="downloadAsAttachment", defaultValue = "false") boolean downloadAsAttachment, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD800WPK0_MCSETUPSprocGetFmchpic");
        InputStream _result = procedureService.executeProcFD800WPK0_MCSETUPSprocGetFmchpic(pprgid, pusrid, pfmchgrp);
        LOGGER.debug("got the result for named procedure: ProcFD800WPK0_MCSETUPSprocGetFmchpic, result:{}", _result);
        return WMMultipartUtils.buildDownloadResponse(_request, _result, downloadAsAttachment);
    }

    @RequestMapping(value = "/procedure/execute/ProcFd107pk0_cqprocUptCQ", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Update CQ")
    public ProcFd107pk0CqprocUptCqResponse executeProcFd107pk0_cqprocUptCQ(@RequestParam(value = "pUsrid", required = false) String pusrid, @RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pCqsheetid", required = false) String pcqsheetid, @RequestParam(value = "pRemarks", required = false) String premarks, @RequestParam(value = "pMainsts", required = false) String pmainsts, @RequestParam(value = "pCondList", required = false) String pcondList, @RequestParam(value = "pRejectcod", required = false) String prejectcod, @RequestParam(value = "pFabseqlist", required = false) String pfabseqlist, @RequestParam(value = "pOperator", required = false) String poperator, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd107pk0_cqprocUptCQ");
        ProcFd107pk0CqprocUptCqResponse _result = procedureService.executeProcFd107pk0_cqprocUptCQ(pusrid, pprgid, pcqsheetid, premarks, pmainsts, pcondList, prejectcod, pfabseqlist, poperator);
        LOGGER.debug("got the result for named procedure: ProcFd107pk0_cqprocUptCQ, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_InsDeliveredJobs", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Update delivered jobs")
    public Void executeProcFD730WPK0_InsDeliveredJobs(@RequestParam(value = "pPrgId", required = false) String pprgId, @RequestParam(value = "pDDelNum", required = false) String pddelNum, @RequestParam(value = "pRackbin", required = false) String prackbin, @RequestParam(value = "pDyejobList", required = false) String pdyejobList, @RequestParam(value = "pFabseq", required = false) Integer pfabseq, @RequestParam(value = "pRedye", required = false) Integer predye, @RequestParam(value = "pCanDeliver", required = false) String pcanDeliver, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_InsDeliveredJobs");
        Void _result = procedureService.executeProcFD730WPK0_InsDeliveredJobs(pprgId, pddelNum, prackbin, pdyejobList, pfabseq, predye, pcanDeliver);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_InsDeliveredJobs, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_GetDelivery", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get Delivery")
    public ProcFd730wpk0GetDeliveryResponse executeProcFD730WPK0_GetDelivery(@RequestParam(value = "pPrgId", required = false) String pprgId, @RequestParam(value = "pRackbin", required = false) String prackbin, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_GetDelivery");
        ProcFd730wpk0GetDeliveryResponse _result = procedureService.executeProcFD730WPK0_GetDelivery(pprgId, prackbin);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_GetDelivery, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD800WPK0_MCSETUPSprocGetProcessWO", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Details for Process Work Order")
    public ProcFd800wpk0McsetupsprocGetProcessWoResponse executeProcFD800WPK0_MCSETUPSprocGetProcessWO(@RequestParam(value = "p_prgid", required = false) String pprgid, @RequestParam(value = "p_usrid", required = false) String pusrid, @RequestParam(value = "p_dyejob", required = false) String pdyejob, @RequestParam(value = "p_redye", required = false) Integer predye, @RequestParam(value = "p_fabseq", required = false) Integer pfabseq, @RequestParam(value = "p_procseq", required = false) Integer pprocseq, @RequestParam(value = "p_option", required = false) String poption, @RequestParam(value = "p_barcode", required = false) String pbarcode, @RequestParam(value = "p_wrkid", required = false) String pwrkid, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD800WPK0_MCSETUPSprocGetProcessWO");
        ProcFd800wpk0McsetupsprocGetProcessWoResponse _result = procedureService.executeProcFD800WPK0_MCSETUPSprocGetProcessWO(pprgid, pusrid, pdyejob, predye, pfabseq, pprocseq, poption, pbarcode, pwrkid);
        LOGGER.debug("got the result for named procedure: ProcFD800WPK0_MCSETUPSprocGetProcessWO, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_DelDeliveredJobs", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Remove dyejob from DN")
    public Void executeProcFD730WPK0_DelDeliveredJobs(@RequestParam(value = "pPrgId", required = false) String pprgId, @RequestParam(value = "pDDelNum", required = false) String pddelNum, @RequestParam(value = "pDyejob", required = false) String pdyejob, @RequestParam(value = "pFabseq", required = false) Integer pfabseq, @RequestParam(value = "pRedye", required = false) Integer predye, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_DelDeliveredJobs");
        Void _result = procedureService.executeProcFD730WPK0_DelDeliveredJobs(pprgId, pddelNum, pdyejob, pfabseq, predye);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_DelDeliveredJobs, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd107pk0_cqprocCqPendingList", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "All pendig CQs")
    public ProcFd107pk0CqprocCqPendingListResponse executeProcFd107pk0_cqprocCqPendingList(@RequestParam(value = "pUsrid", required = false) String pusrid, @RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pStatusType", required = false) String pstatusType, @RequestParam(value = "pProcess", required = false) String pprocess, @RequestParam(value = "pLocation", required = false) String plocation, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd107pk0_cqprocCqPendingList");
        ProcFd107pk0CqprocCqPendingListResponse _result = procedureService.executeProcFd107pk0_cqprocCqPendingList(pusrid, pprgid, pstatusType, pprocess, plocation);
        LOGGER.debug("got the result for named procedure: ProcFd107pk0_cqprocCqPendingList, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/updateProcFd107pk0_cqprocUpdInspectCondition", method = RequestMethod.PUT)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "updateProcFd107pk0_cqprocUpdInspectCondition")
    public Void executeUpdateProcFd107pk0_cqprocUpdInspectCondition(@Valid @RequestBody UpdateProcFd107pk0CqprocUpdInspectConditionRequest updateProcFd107pk0cqprocUpdInspectConditionRequest, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: updateProcFd107pk0_cqprocUpdInspectCondition");
        Void _result = procedureService.executeUpdateProcFd107pk0_cqprocUpdInspectCondition(updateProcFd107pk0cqprocUpdInspectConditionRequest);
        LOGGER.debug("got the result for named procedure: updateProcFd107pk0_cqprocUpdInspectCondition, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd723pk0DeliveryOutDetails", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get all the details and lov's for Delivery")
    public ProcFd723pk0deliveryOutDetailsResponse executeProcFd723pk0DeliveryOutDetails(@RequestParam(value = "pUsrid", required = false) String pusrid, @RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pBarcode", required = false) String pbarcode, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd723pk0DeliveryOutDetails");
        ProcFd723pk0deliveryOutDetailsResponse _result = procedureService.executeProcFd723pk0DeliveryOutDetails(pusrid, pprgid, pbarcode);
        LOGGER.debug("got the result for named procedure: ProcFd723pk0DeliveryOutDetails, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd723pk0PlacementDetails", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get FabSeq and Dyejob details")
    public ProcFd723pk0placementDetailsResponse executeProcFd723pk0PlacementDetails(@RequestParam(value = "pUsrid") String pusrid, @RequestParam(value = "pPrgid") String pprgid, @RequestParam(value = "pBarcode") String pbarcode, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd723pk0PlacementDetails");
        ProcFd723pk0placementDetailsResponse _result = procedureService.executeProcFd723pk0PlacementDetails(pusrid, pprgid, pbarcode);
        LOGGER.debug("got the result for named procedure: ProcFd723pk0PlacementDetails, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD800WPK0_MCSETUPSprocGetTestResults", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "FD800WPK0_MCSETUPSprocGetTestResults")
    public ProcFd800wpk0McsetupsprocGetTestResultsResponse executeProcFD800WPK0_MCSETUPSprocGetTestResults(@RequestParam(value = "p_prgid", required = false) String pprgid, @RequestParam(value = "p_usrid", required = false) String pusrid, @RequestParam(value = "p_dyejob", required = false) String pdyejob, @RequestParam(value = "p_redye", required = false) Integer predye, @RequestParam(value = "p_fabseq", required = false) Integer pfabseq, @RequestParam(value = "p_procseq", required = false) Integer pprocseq, @RequestParam(value = "p_cqstage", required = false) String pcqstage, @RequestParam(value = "p_barcode", required = false) String pbarcode, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD800WPK0_MCSETUPSprocGetTestResults");
        ProcFd800wpk0McsetupsprocGetTestResultsResponse _result = procedureService.executeProcFD800WPK0_MCSETUPSprocGetTestResults(pprgid, pusrid, pdyejob, predye, pfabseq, pprocseq, pcqstage, pbarcode);
        LOGGER.debug("got the result for named procedure: ProcFD800WPK0_MCSETUPSprocGetTestResults, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD350PK0_MODJOB_GetBatchDetail", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Fetch batch details")
    public ProcFd350pk0ModjobGetBatchDetailResponse executeProcFD350PK0_MODJOB_GetBatchDetail(@RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pBatchSeqBarcode", required = false) String pbatchSeqBarcode, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD350PK0_MODJOB_GetBatchDetail");
        ProcFd350pk0ModjobGetBatchDetailResponse _result = procedureService.executeProcFD350PK0_MODJOB_GetBatchDetail(pprgid, pbatchSeqBarcode);
        LOGGER.debug("got the result for named procedure: ProcFD350PK0_MODJOB_GetBatchDetail, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd107pk0_CqprocUpdateIssue", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "ProcFd107pk0_CqprocUpdateIssue")
    public Void executeProcFd107pk0_CqprocUpdateIssue(@RequestParam(value = "p_usrid", required = false) String pusrid, @RequestParam(value = "p_prgid", required = false) String pprgid, @RequestParam(value = "p_barcode", required = false) String pbarcode, @RequestParam(value = "p_remarks", required = false) String premarks, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd107pk0_CqprocUpdateIssue");
        Void _result = procedureService.executeProcFd107pk0_CqprocUpdateIssue(pusrid, pprgid, pbarcode, premarks);
        LOGGER.debug("got the result for named procedure: ProcFd107pk0_CqprocUpdateIssue, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD1000WPK0_MODJOB_isPalletReady", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Check pallet ready status for a job")
    public ProcFd1000wpk0ModjobIsPalletReadyResponse executeProcFD1000WPK0_MODJOB_isPalletReady(@RequestParam(value = "pprgid", required = false) String pprgid, @RequestParam(value = "pdyejob", required = false) String pdyejob, @RequestParam(value = "pbarcode", required = false) String pbarcode, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD1000WPK0_MODJOB_isPalletReady");
        ProcFd1000wpk0ModjobIsPalletReadyResponse _result = procedureService.executeProcFD1000WPK0_MODJOB_isPalletReady(pprgid, pdyejob, pbarcode);
        LOGGER.debug("got the result for named procedure: ProcFD1000WPK0_MODJOB_isPalletReady, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_GetMakLcn", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Fetch Makeup unit")
    public ProcFd730wpk0GetMakLcnResponse executeProcFD730WPK0_GetMakLcn(@RequestParam(value = "pPrgId", required = false) String pprgId, @RequestParam(value = "pDyejob", required = false) String pdyejob, @RequestParam(value = "pFabseq", required = false) Integer pfabseq, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_GetMakLcn");
        ProcFd730wpk0GetMakLcnResponse _result = procedureService.executeProcFD730WPK0_GetMakLcn(pprgId, pdyejob, pfabseq);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_GetMakLcn, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd107pk0_CqprocGetDetailsAndSheet", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "ProcFd107pk0_CqprocGetDetailsAndSheet")
    public ProcFd107pk0CqprocGetDetailsAndSheetResponse executeProcFd107pk0_CqprocGetDetailsAndSheet(@RequestParam(value = "pUsrid", required = false) String pusrid, @RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pBarcode", required = false) String pbarcode, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd107pk0_CqprocGetDetailsAndSheet");
        ProcFd107pk0CqprocGetDetailsAndSheetResponse _result = procedureService.executeProcFd107pk0_CqprocGetDetailsAndSheet(pusrid, pprgid, pbarcode);
        LOGGER.debug("got the result for named procedure: ProcFd107pk0_CqprocGetDetailsAndSheet, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd107pk0GetInspectionCondList", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "ProcFd107pk0GetInspectionCondList")
    public ProcFd107pk0getInspectionCondListResponse executeProcFd107pk0GetInspectionCondList(@RequestParam(value = "p_usrid", required = false) String pusrid, @RequestParam(value = "p_prgid", required = false) String pprgid, @RequestParam(value = "pBarcode", required = false) String pbarcode, @RequestParam(value = "p_inslayout", required = false) Integer pinslayout, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd107pk0GetInspectionCondList");
        ProcFd107pk0getInspectionCondListResponse _result = procedureService.executeProcFd107pk0GetInspectionCondList(pusrid, pprgid, pbarcode, pinslayout);
        LOGGER.debug("got the result for named procedure: ProcFd107pk0GetInspectionCondList, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/UpdateProcFD730WPK_LastRackbin", method = RequestMethod.PUT)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Update rackbin for user")
    public Void executeUpdateProcFD730WPK_LastRackbin(@Valid @RequestBody UpdateProcFd730wpkLastRackbinRequest updateProcFd730wpkLastRackbinRequest, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: UpdateProcFD730WPK_LastRackbin");
        Void _result = procedureService.executeUpdateProcFD730WPK_LastRackbin(updateProcFd730wpkLastRackbinRequest);
        LOGGER.debug("got the result for named procedure: UpdateProcFD730WPK_LastRackbin, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd107pk0_cqprocCheckUser", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "ProcFd107pk0_cqprocCheckUser")
    public ProcFd107pk0CqprocCheckUserResponse executeProcFd107pk0_cqprocCheckUser(@RequestParam(value = "pUser", required = false) String puser, @RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pAccessKey", required = false) String paccessKey, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd107pk0_cqprocCheckUser");
        ProcFd107pk0CqprocCheckUserResponse _result = procedureService.executeProcFd107pk0_cqprocCheckUser(puser, pprgid, paccessKey);
        LOGGER.debug("got the result for named procedure: ProcFd107pk0_cqprocCheckUser, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd724pk0ScanDet", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get all details about the scan barcode")
    public ProcFd724pk0scanDetResponse executeProcFd724pk0ScanDet(@RequestParam(value = "pUsrid", required = false) String pusrid, @RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pBarcode", required = false) String pbarcode, @RequestParam(value = "pOperatorEmpCode", required = false) String poperatorEmpCode, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd724pk0ScanDet");
        ProcFd724pk0scanDetResponse _result = procedureService.executeProcFd724pk0ScanDet(pusrid, pprgid, pbarcode, poperatorEmpCode);
        LOGGER.debug("got the result for named procedure: ProcFd724pk0ScanDet, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd107pk0_cqprocReqSignOffJobList", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "ProcFd107pk0_cqprocReqSignOffJobList")
    public ProcFd107pk0CqprocReqSignOffJobListResponse executeProcFd107pk0_cqprocReqSignOffJobList(@RequestParam(value = "pUsrid", required = false) String pusrid, @RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pBarcode", required = false) String pbarcode, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd107pk0_cqprocReqSignOffJobList");
        ProcFd107pk0CqprocReqSignOffJobListResponse _result = procedureService.executeProcFd107pk0_cqprocReqSignOffJobList(pusrid, pprgid, pbarcode);
        LOGGER.debug("got the result for named procedure: ProcFd107pk0_cqprocReqSignOffJobList, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd723pk0UpdateDeliveryIn", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Acknowledge the fabseq or dyejob")
    public ProcFd723pk0updateDeliveryInResponse executeProcFd723pk0UpdateDeliveryIn(@RequestParam(value = "pUsrid") String pusrid, @RequestParam(value = "pPrgid") String pprgid, @RequestParam(value = "pBarcode") String pbarcode, @RequestParam(value = "pSaveOption") String psaveOption, @RequestParam(value = "pDestLcn") String pdestLcn, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd723pk0UpdateDeliveryIn");
        ProcFd723pk0updateDeliveryInResponse _result = procedureService.executeProcFd723pk0UpdateDeliveryIn(pusrid, pprgid, pbarcode, psaveOption, pdestLcn);
        LOGGER.debug("got the result for named procedure: ProcFd723pk0UpdateDeliveryIn, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd724pk0CheckEmpCode", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "ProcFd724pk0CheckEmpCode")
    public ProcFd724pk0checkEmpCodeResponse executeProcFd724pk0CheckEmpCode(@RequestParam(value = "p_empcode", required = false) String pempcode, @RequestParam(value = "p_prgid", required = false) String pprgid, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd724pk0CheckEmpCode");
        ProcFd724pk0checkEmpCodeResponse _result = procedureService.executeProcFd724pk0CheckEmpCode(pempcode, pprgid);
        LOGGER.debug("got the result for named procedure: ProcFd724pk0CheckEmpCode, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD730WPK0_GetDeliveryDet", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Get Delivery Details")
    public ProcFd730wpk0GetDeliveryDetResponse executeProcFD730WPK0_GetDeliveryDet(@RequestParam(value = "pPrgId", required = false) String pprgId, @RequestParam(value = "pDDelNum", required = false) String pddelNum, @RequestParam(value = "pRackbin", required = false) String prackbin, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD730WPK0_GetDeliveryDet");
        ProcFd730wpk0GetDeliveryDetResponse _result = procedureService.executeProcFD730WPK0_GetDeliveryDet(pprgId, pddelNum, prackbin);
        LOGGER.debug("got the result for named procedure: ProcFD730WPK0_GetDeliveryDet, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd723pk0UpdPlacement", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Update placement for fabseq of dyejob")
    public ProcFd723pk0updPlacementResponse executeProcFd723pk0UpdPlacement(@RequestParam(value = "pUsrid", required = false) String pusrid, @RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pBarcode2", required = false) String pbarcode2, @RequestParam(value = "pSaveOption", required = false) String psaveOption, @RequestParam(value = "pPlaceLcn", required = false) String pplaceLcn, @RequestParam(value = "pPlaceRackbin", required = false) String pplaceRackbin, @RequestParam(value = "pOperator", required = false) String poperator, @RequestParam(value = "pFabseqlist", required = false) String pfabseqlist, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd723pk0UpdPlacement");
        ProcFd723pk0updPlacementResponse _result = procedureService.executeProcFd723pk0UpdPlacement(pusrid, pprgid, pbarcode2, psaveOption, pplaceLcn, pplaceRackbin, poperator, pfabseqlist);
        LOGGER.debug("got the result for named procedure: ProcFd723pk0UpdPlacement, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD800WPK0_MCSETUPSprocUpdTstRslt", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "FD800WPK0_MCSETUPSprocUpdTstRslt")
    public ProcFd800wpk0McsetupsprocUpdTstRsltResponse executeProcFD800WPK0_MCSETUPSprocUpdTstRslt(@RequestParam(value = "p_prgid", required = false) String pprgid, @RequestParam(value = "p_usrid", required = false) String pusrid, @RequestParam(value = "p_wrkid", required = false) String pwrkid, @RequestParam(value = "p_dyejoblist", required = false) String pdyejoblist, @RequestParam(value = "p_redye", required = false) Integer predye, @RequestParam(value = "p_procseq", required = false) Integer pprocseq, @RequestParam(value = "p_cqcod", required = false) String pcqcod, @RequestParam(value = "p_actval", required = false) String pactval, @RequestParam(value = "p_cqstage", required = false) String pcqstage, @RequestParam(value = "p_riblance", required = false) String priblance, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD800WPK0_MCSETUPSprocUpdTstRslt");
        ProcFd800wpk0McsetupsprocUpdTstRsltResponse _result = procedureService.executeProcFD800WPK0_MCSETUPSprocUpdTstRslt(pprgid, pusrid, pwrkid, pdyejoblist, predye, pprocseq, pcqcod, pactval, pcqstage, priblance);
        LOGGER.debug("got the result for named procedure: ProcFD800WPK0_MCSETUPSprocUpdTstRslt, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd107pk0_cqprocGetProcessList", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "ProcFd107pk0_cqprocGetProcessList")
    public ProcFd107pk0CqprocGetProcessListResponse executeProcFd107pk0_cqprocGetProcessList(@RequestParam(value = "pUsrid", required = false) String pusrid, @RequestParam(value = "pPrgid", required = false) String pprgid, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd107pk0_cqprocGetProcessList");
        ProcFd107pk0CqprocGetProcessListResponse _result = procedureService.executeProcFd107pk0_cqprocGetProcessList(pusrid, pprgid);
        LOGGER.debug("got the result for named procedure: ProcFd107pk0_cqprocGetProcessList, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd723pk0GetFabDetails", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "ProcFd723pk0GetFabDetails")
    public ProcFd723pk0getFabDetailsResponse executeProcFd723pk0GetFabDetails(@RequestParam(value = "pUsrid", required = false) String pusrid, @RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pBarcode", required = false) String pbarcode, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd723pk0GetFabDetails");
        ProcFd723pk0getFabDetailsResponse _result = procedureService.executeProcFd723pk0GetFabDetails(pusrid, pprgid, pbarcode);
        LOGGER.debug("got the result for named procedure: ProcFd723pk0GetFabDetails, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFd724UpdateScanProcess", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Start/End procedd of the dyejob/fabseq")
    public ProcFd724updateScanProcessResponse executeProcFd724UpdateScanProcess(@RequestParam(value = "pUsrid", required = false) String pusrid, @RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pBarcode", required = false) String pbarcode, @RequestParam(value = "pSaveOption", required = false) String psaveOption, @RequestParam(value = "pProcess", required = false) String pprocess, @RequestParam(value = "pOperator", required = false) String poperator, @RequestParam(value = "pMchcod", required = false) String pmchcod, @RequestParam(value = "pScanmts", required = false) String pscanmts, @RequestParam(value = "pProcessAction", required = false) String pprocessAction, @RequestParam(value = "pFabseqlist", required = false) String pfabseqlist, @RequestParam(value = "pHaltRemarks", required = false) String phaltRemarks, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFd724UpdateScanProcess");
        ProcFd724updateScanProcessResponse _result = procedureService.executeProcFd724UpdateScanProcess(pusrid, pprgid, pbarcode, psaveOption, pprocess, poperator, pmchcod, pscanmts, pprocessAction, pfabseqlist, phaltRemarks);
        LOGGER.debug("got the result for named procedure: ProcFd724UpdateScanProcess, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/UpdateProcFD1000WPK0_MODJOB_updJobWeight", method = RequestMethod.PUT)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Update job weight")
    public Void executeUpdateProcFD1000WPK0_MODJOB_updJobWeight(@Valid @RequestBody UpdateProcFd1000wpk0ModjobUpdJobWeightRequest updateProcFd1000wpk0modjobUpdJobWeightRequest, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: UpdateProcFD1000WPK0_MODJOB_updJobWeight");
        Void _result = procedureService.executeUpdateProcFD1000WPK0_MODJOB_updJobWeight(updateProcFd1000wpk0modjobUpdJobWeightRequest);
        LOGGER.debug("got the result for named procedure: UpdateProcFD1000WPK0_MODJOB_updJobWeight, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/UpdateProcFD730WPK0_UpdJobCount", method = RequestMethod.PUT)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Update Job Count for DN")
    public Void executeUpdateProcFD730WPK0_UpdJobCount(@Valid @RequestBody UpdateProcFd730wpk0UpdJobCountRequest updateProcFd730wpk0updJobCountRequest, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: UpdateProcFD730WPK0_UpdJobCount");
        Void _result = procedureService.executeUpdateProcFD730WPK0_UpdJobCount(updateProcFd730wpk0updJobCountRequest);
        LOGGER.debug("got the result for named procedure: UpdateProcFD730WPK0_UpdJobCount, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/ProcFD350PK0_MODJOB_SaveBatchWgt", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "Save batch weight")
    public Void executeProcFD350PK0_MODJOB_SaveBatchWgt(@RequestParam(value = "pPrgid", required = false) String pprgid, @RequestParam(value = "pBchseq", required = false) String pbchseq, @RequestParam(value = "pWgt", required = false) Double pwgt, @RequestParam(value = "pWrkid", required = false) String pwrkid, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: ProcFD350PK0_MODJOB_SaveBatchWgt");
        Void _result = procedureService.executeProcFD350PK0_MODJOB_SaveBatchWgt(pprgid, pbchseq, pwgt, pwrkid);
        LOGGER.debug("got the result for named procedure: ProcFD350PK0_MODJOB_SaveBatchWgt, result:{}", _result);
        return _result;
    }

    @RequestMapping(value = "/procedure/execute/updateFd107pk0_cqprocRequestSignoff", method = RequestMethod.PUT)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "updateFd107pk0_cqprocRequestSignoff")
    public UpdateFd107pk0CqprocRequestSignoffResponse executeUpdateFd107pk0_cqprocRequestSignoff(@Valid @RequestBody UpdateFd107pk0CqprocRequestSignoffRequest updateFd107pk0cqprocRequestSignoffRequest, HttpServletRequest _request) {
        LOGGER.debug("Executing named procedure: updateFd107pk0_cqprocRequestSignoff");
        UpdateFd107pk0CqprocRequestSignoffResponse _result = procedureService.executeUpdateFd107pk0_cqprocRequestSignoff(updateFd107pk0cqprocRequestSignoffRequest);
        LOGGER.debug("got the result for named procedure: updateFd107pk0_cqprocRequestSignoff, result:{}", _result);
        return _result;
    }

}